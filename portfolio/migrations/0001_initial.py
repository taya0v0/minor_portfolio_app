# Generated by Django 4.2.7

from django.db import migrations, models
import django.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classmate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='classmates_photos/', verbose_name='Фото')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='Электронная почта')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+999999999'. До 15 цифр.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Город')),
                ('group_number', models.CharField(blank=True, max_length=20, verbose_name='Номер группы')),
                ('interests', models.TextField(blank=True, help_text='Хобби, интересы, увлечения', verbose_name='Интересы')),
                ('social_vk', models.URLField(blank=True, verbose_name='ВКонтакте')),
                ('social_telegram', models.CharField(blank=True, help_text='Например: @username', max_length=100, verbose_name='Telegram')),
                ('social_instagram', models.CharField(blank=True, help_text='Например: @username', max_length=100, verbose_name='Instagram')),
                ('is_close_friend', models.BooleanField(default=False, help_text='Отметить как близкого друга', verbose_name='Близкий друг')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная запись')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сокурсник',
                'verbose_name_plural': 'Сокурсники',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='EducationalProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название программы')),
                ('university', models.CharField(max_length=200, verbose_name='Университет')),
                ('faculty', models.CharField(blank=True, max_length=200, verbose_name='Факультет')),
                ('program_url', models.URLField(blank=True, verbose_name='Ссылка на страницу программы')),
                ('what_i_study', models.TextField(help_text='Основные дисциплины и предметы', verbose_name='Что я изучаю')),
                ('what_i_learn', models.TextField(help_text='Навыки и компетенции, которые получу', verbose_name='Чему научусь')),
                ('advantages', models.TextField(help_text='Уникальные особенности и преимущества', verbose_name='Преимущества программы')),
                ('career_prospects', models.TextField(help_text='Карьерные возможности и перспективы', verbose_name='Перспективы после обучения')),
                ('duration', models.CharField(help_text='Например: 4 года, 2 года', max_length=50, verbose_name='Длительность обучения')),
                ('degree_level', models.CharField(choices=[('bachelor', 'Бакалавриат'), ('master', 'Магистратура'), ('specialist', 'Специалитет'), ('phd', 'Аспирантура')], max_length=50, verbose_name='Уровень образования')),
                ('start_year', models.IntegerField(verbose_name='Год начала обучения')),
                ('end_year', models.IntegerField(verbose_name='Год окончания обучения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная запись')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Образовательная программа',
                'verbose_name_plural': 'Образовательные программы',
                'ordering': ['-start_year'],
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('role', models.CharField(choices=[('academic_director', 'Академический руководитель'), ('program_manager', 'Менеджер программы'), ('coordinator', 'Координатор'), ('dean', 'Декан'), ('vice_dean', 'Заместитель декана')], max_length=50, verbose_name='Должность')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='management_photos/', verbose_name='Фото')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='Электронная почта')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+999999999'. До 15 цифр.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('department', models.CharField(blank=True, max_length=200, verbose_name='Кафедра/Отдел')),
                ('academic_degree', models.CharField(blank=True, max_length=100, verbose_name='Ученая степень')),
                ('bio', models.TextField(blank=True, help_text='Краткая информация о деятельности', verbose_name='Биография')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная запись')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сотрудник менеджмента',
                'verbose_name_plural': 'Менеджмент программы',
                'ordering': ['order', 'role', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='personal_photos/', verbose_name='Фото')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='Электронная почта')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+999999999'. До 15 цифр.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('resume', models.TextField(help_text='Краткая информация о себе, достижениях, интересах', verbose_name='Резюме/О себе')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Город')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная запись')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Личная информация',
                'verbose_name_plural': 'Личная информация',
                'ordering': ['-created_at'],
            },
        ),
    ]
